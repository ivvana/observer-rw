//Aбстрактният обект
public abstract class iPhoneStock
{
    //листа с хора чакащи айфоните
    private List<iPhoneCustomer> _customers = new();

    //добавяне на нов купувач
    public void AddCustomer(iPhoneCustomer customer)
    {
        _customers.Add(customer);
    }

    //премахване на купувач
    public void RemoveCustomer(iPhoneCustomer customer)
    {
        _customers.Remove(customer);
    }

    //уведомяваме купувачите, когато състоянието се промени
    public void Notify()
    {
        foreach (iPhoneCustomer iCustomer in _customers)
        {
            iCustomer.Update();
        }
    }
}

//конкретния обект
public class iPhone : iPhoneStock
{
    public string Availability { get; set; } = string.Empty;
}

//Aбстрактния Ноблюдател
public interface iPhoneCustomer
{
    public abstract void Update();
}

//Конкретния набл
public class Customer : iPhoneCustomer
{
    private string _name;
    private string _state = string.Empty;
    private iPhone _iPhone;

    public Customer(
        iPhone Iphone, string customer_name)
    {
        _iPhone = Iphone;
        _name = customer_name;
    }

    public void Update()
    {
        _state = _iPhone.Availability;
        Console.WriteLine($"Customer: {_name}\nState Changed " +
            $"to {_state} as iPhone is {_iPhone.Availability}");
    }
}

///---------------
var iphone = new iPhone();

// Създаваме клиентите, които ще наблюдават обекта
var customer1 = new Customer(iphone, "1");
var customer2 = new Customer(iphone, "2");
var customer3 = new Customer(iphone, "3");

//добавяме клиент към листа
iphone.AddCustomer(customer1);
iphone.AddCustomer(customer2);
iphone.AddCustomer(customer3);

//Променяме състоянието на обекта
//това автоматично ще промени и състоянието на клиентите
iphone.Availability = "Available";

//тук ги уведомяваме за наличието на айфона
iphone.Notify();

Console.ReadKey();
